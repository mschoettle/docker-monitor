# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  linting:
    parameters:
      version:
        type: string
    docker:
      - image: cimg/python:<< parameters.version >>
    steps:
      - checkout
      - run: python --version
      - run: pip install --upgrade pip
      - python/install-packages:
          pkg-manager: pip
          app-dir: ~/project/requirements/
          pip-dependency-file: development.txt
      - run: flake8 --version
      - run:
          name: Run flake8
          command: flake8
      - run: mypy --version
      - run:
          name: Run mypy
          command: mypy .

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - linting:
          matrix:
            parameters:
              version: ["3.8", "3.9", "3.10", "3.11"]
